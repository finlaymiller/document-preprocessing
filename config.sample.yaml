# Application-level configuration
app:
  # The sequence of steps to run in the pipeline.
  pipeline:
    - "step_01_normalize_input"
    - "step_02_preprocess_image"
    - "step_03_layout_analysis"

# Step 1: Input Normalization Configuration
step_01_normalize_input:
  # The input directory containing original documents (PDFs, images).
  input_dir: "input"
  # The output directory for normalized images.
  output_dir: "output/01_normalized"
  # Dots per inch (DPI) for rendering PDF pages as images.
  dpi: 300
  # The image format for the output files (e.g., 'png', 'tiff').
  image_format: "png"

# Step 2: Image Preprocessing Configuration
step_02_preprocess_image:
  # The input directory for this step, typically the output from step 1.
  input_dir: "output/01_normalized"
  # The main output directory for the final preprocessed images.
  output_dir: "output/02_preprocessed/final"
  # If true, saves the output of each sub-step into its own folder for debugging.
  save_intermediate_steps: true
  # The directory where intermediate outputs are stored.
  intermediate_dir: "output/02_preprocessed"

  # Each sub-step can be enabled and configured individually.
  # The pipeline will execute them in the order defined here.
  pipeline:
    - { enabled: true, type: "grayscale" }
    - { enabled: true, type: "denoise", kernel_size: [5, 5] }
    - {
        enabled: true,
        type: "threshold",
        method: "adaptive_gaussian",
        block_size: 11,
        c: 2,
      }
    - { enabled: true, type: "deskew" }

# step 3: layout analysis configuration
step_03_layout_analysis:
  # the input directory for this step, typically the final output from step 2.
  input_dir: "output/02_preprocessed"
  # the root output directory for this step's results.
  output_dir: "output/03_layout_analysis"

  # configuration for the layout detection model.
  model_config:
    # we will use a detectron2-based model from the layoutparser model catalog.
    # publaynet is a large dataset for document layout analysis.
    # other models can be found here: https://layout-parser.readthedocs.io/en/latest/notes/model_zoo.html
    type: "lp://PubLayNet/mask_rcnn_X_101_32x8d_FPN_3x/config"

    # a mapping of model-specific labels to custom, human-readable names.
    # labels for the publaynet model are: 'text', 'title', 'list', 'table', 'figure'.
    label_map:
      text: "Text"
      title: "Title"
      list: "List"
      table: "Table"
      figure: "Figure"
